@using Assignment_1.Data
@using Microsoft.AspNetCore.Components
@using Models
@inject ITFamilyManager FamilyManager;
@inject NavigationManager NavigationManager;


<EditForm Model="@newPet" OnValidSubmit="AddNewPet">
    <DataAnnotationsValidator/>
    <ValidationSummary/>


    <div class="container">
        <h3 style="margin-top: 40px">Add Pet</h3>
        <div class="row">

            <div class="col-6">
                <div class="form-group">
                    Family id: <br/>
                    <InputSelect @bind-Value="FamilyId">
                        @foreach (var familiy in Families)
                        {
                            <option >@familiy.Id</option>
                        }
                    </InputSelect>

                    <div class="form-group" style="margin-top: 19px">
                        Name: <br/>
                        <InputText @bind-Value="newPet.Name"></InputText>
                    </div>

                    <div class="form-group">
                        Species: <br/>
                        <InputText @bind-Value="newPet.Species"></InputText>
                    </div>


                </div>
            </div>

            <div class="col-6">
                <div class="form-group">
                    Age: <br/>
                    <InputNumber @bind-Value="newPet.Age"></InputNumber>
                </div>


                <p style="margin-top: 35px" class="actions">
                    <button class="btn btn-outline-dark" type="submit">Add</button>
                </p>

            </div>
        </div>

    </div>

</EditForm>

@code {

    private int FamilyId;
    private Pet newPet = new Pet();


    private IList<Family> Families;

    protected override async Task OnInitializedAsync()
    {
        Families = FamilyManager.getFamilies();
    }


    private void AddNewPet()
    {
        FamilyManager.AddPet(newPet, FamilyId);
        NavigationManager.NavigateTo($"Inspect/{FamilyId}");
    }

}