@page "/login"
@namespace LoginComponent
@using Assignment_1.Data

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>

        <body>
        <h2 style="text-align: center">Login Form</h2>

        <div class="BigBox">
            <form >
                <div class="container">
                    <label for="uname">
                        <b>Username</b>
                    </label>
                    <input type="text" placeholder="Enter Username" name="uname" @bind-value="username" required>

                    <label for="psw">
                        <b>Password</b>
                    </label>
                    <input type="password" placeholder="Enter Password" name="psw" @bind-value="password" required>

                </div>
            </form>


            <button @onclick="PerformLogin">Login</button>

            <div class="container" style="background-color:#f1f1f1">
                <a style="margin-left: 60px">Dont have an accout yet ?</a>
                <button style="margin-left: 40px" type="button" class="cancelbtn" @onclick="GoToRegister">Register</button>
            </div>

        </div>


        </body>

    </NotAuthorized>
</AuthorizeView>


@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public void GoToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }

    

}